<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xdbigdata.subsidize_zjut.mapper.LoanRecordMapper">

    <insert id="insertLoanApplication">
      INSERT ignore INTO
          t_loan_record (loan_id, student_sn, applied_amount, student_name, college_name, major_name, grade_name, class_name)
      VALUES
          (#{loanRecord.loanId}, #{loanRecord.studentSn}, #{loanRecord.appliedAmount}, #{loanRecord.studentName},
          #{loanRecord.collegeName}, #{loanRecord.majorName}, #{loanRecord.gradeName}, #{loanRecord.className})
    </insert>

    <update id="updateLoanApplication">
        UPDATE
          t_loan_record
        SET
          status = #{loanRecord.status},
          result = #{loanRecord.result}
        WHERE
          id = #{loanRecord.id}
    </update>

    <select id="queryAllInListAndByLoan" resultType="LoanRecord">
        SELECT
        student_sn, create_time, applied_amount, status, result
        FROM
        t_loan_record
        where
        loan_id = #{loanId}
        AND
        student_sn IN
        <foreach collection="studentSns" index="index" item="studentSn" open="(" separator="," close=")">
        #{studentSn}
        </foreach>
    </select>

    <update id="updateInList">
        UPDATE
          t_loan_record
        SET
          status = #{status},
          result = #{result}
        where
          loan_id = #{loanId}
        AND
          student_sn IN
        <foreach collection="studentSns" index="index" item="studentSn" open="(" separator="," close=")">
            #{studentSn}
        </foreach>
    </update>

    <update id="updateNotInList">
        UPDATE
        t_loan_record
        SET
        status = #{status},
        result = #{result}
        where
        loan_id = #{loanId}
        AND
        student_sn NOT IN
        <foreach collection="studentSns" index="index" item="studentSn" open="(" separator="," close=")">
            #{studentSn}
        </foreach>
    </update>

    <select id="countTimesByStudentSn" resultType="Long">
        select
          COUNT(id)
        FROM
          t_loan_record
        where
            student_sn = #{studentSn}
    </select>

    <select id="countTimesGroupByStudentSn" resultType="com.xdbigdata.subsidize_zjut.common.dto.StudentLoanTimesDto">
        SELECT
          student_sn, COUNT(id) as loanTimes
        FROM
          t_loan_record
        WHERE
          student_sn IN
        <foreach collection="studentSns" index="index" item="studentSn" open="(" separator="," close=")">
            #{studentSn}
        </foreach>
        GROUP BY
          student_sn
    </select>

    <select id="countNumberAndMoney" resultType="com.xdbigdata.subsidize_zjut.common.dto.SubsidizeGroupLevelDto">
        SELECT
        count(DISTINCT h.student_sn) AS number,
        IFNULL(sum(h.applied_amount),0) AS money
        FROM
        t_loan_record h INNER JOIN t_loan l on h.loan_id = l.id
        WHERE h.student_sn IN
        <foreach collection="studentSns" index="index" item="studentSn" open="(" separator="," close=")">
            #{studentSn}
        </foreach>
        <if test="dataAmountQueryCondititonDto.collegeName != '-1'">
            AND h.college_name = #{dataAmountQueryCondititonDto.collegeName}
        </if>
        <if test="dataAmountQueryCondititonDto.majorName != '-1'">
            AND h.major_name = #{dataAmountQueryCondititonDto.majorName}
        </if>
        <if test="dataAmountQueryCondititonDto.gradeName != '-1'">
            AND h.grade_name = #{dataAmountQueryCondititonDto.gradeName}
        </if>
        <if test="dataAmountQueryCondititonDto.className != '-1'">
            AND h.class_name = #{dataAmountQueryCondititonDto.className}
        </if>
        AND CAST(LEFT(l.`school_year`, 4) AS SIGNED)
        BETWEEN CAST(LEFT(#{dataAmountQueryCondititonDto.startSchoolYear}, 4) AS SIGNED)
        AND CAST(LEFT(#{dataAmountQueryCondititonDto.endSchoolYear},4) AS SIGNED)
    </select>



</mapper>